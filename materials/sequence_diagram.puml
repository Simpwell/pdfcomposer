@startuml

actor User
participant PDFDropZone
participant "Feature Component" as Feature
participant usePDFUpload
participant "PDF Library" as PDFLib
participant "Tesseract.js" as OCR

== ファイルアップロードフロー ==
User -> PDFDropZone: ファイルをドロップ
activate PDFDropZone
PDFDropZone -> usePDFUpload: handleFileUpload()
activate usePDFUpload
usePDFUpload -> PDFLib: ファイル読み込み
PDFLib --> usePDFUpload: PDFDocument
usePDFUpload --> PDFDropZone: 完了
deactivate usePDFUpload
PDFDropZone --> User: プレビュー表示
deactivate PDFDropZone

== PDF操作フロー ==
User -> Feature: 操作実行
activate Feature
Feature -> PDFLib: PDF操作
PDFLib --> Feature: 新しいPDF
Feature -> User: ダウンロード開始
deactivate Feature

== テキスト抽出フロー ==
User -> Feature: テキスト抽出開始
activate Feature
Feature -> PDFLib: テキストレイヤー確認
alt テキストレイヤーあり
    PDFLib -> PDFLib: getTextContent()
    PDFLib --> Feature: テキスト抽出結果
else テキストレイヤーなし
    Feature -> OCR: createWorker()
    activate OCR
    OCR --> Feature: worker作成完了
    loop 各ページ
        Feature -> PDFLib: ページをcanvasにレンダリング
        PDFLib --> Feature: canvas
        Feature -> OCR: recognize()
        OCR --> Feature: OCR結果
    end
    Feature -> OCR: terminate()
    deactivate OCR
end
Feature -> Feature: テキスト整形
Feature -> User: テキスト表示・ダウンロード
deactivate Feature

@enduml 